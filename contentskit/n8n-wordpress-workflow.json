{
  "name": "AI 블로그 자동화 워크플로우",
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "days",
              "minutesInterval": 1440,
              "triggerAtHour": 9
            }
          ]
        }
      },
      "name": "Schedule Trigger",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1,
      "position": [
        250,
        300
      ]
    },
    {
      "parameters": {
        "jsCode": "// AI 주제 목록\nconst topics = [\n  \"최신 AI 기술 트렌드\",\n  \"생성형 AI의 발전과 활용\",\n  \"AI와 윤리적 문제\",\n  \"머신러닝 알고리즘 소개\",\n  \"자연어 처리 기술의 발전\",\n  \"컴퓨터 비전 기술 동향\",\n  \"AI와 의료 산업\",\n  \"AI와 금융 기술\",\n  \"AI와 교육의 미래\",\n  \"AI 개발자를 위한 도구와 리소스\"\n];\n\n// 랜덤하게 주제 선택\nconst randomTopic = topics[Math.floor(Math.random() * topics.length)];\n\nreturn {\n  topic: randomTopic\n};"
      },
      "name": "Generate Topic",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [
        450,
        300
      ]
    },
    {
      "parameters": {
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "url": "=https://api.openai.com/v1/chat/completions",
        "options": {
          "headers": {
            "parameters": [
              {
                "name": "Content-Type",
                "value": "application/json"
              },
              {
                "name": "Authorization",
                "value": "=Bearer {{$credentials.openAiApi.apiKey}}"
              }
            ]
          }
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "model",
              "value": "gpt-4"
            },
            {
              "name": "messages",
              "value": "=[\n  {\n    \"role\": \"system\",\n    \"content\": \"당신은 AI 기술 블로그 작가입니다. 한국어로 전문적이고 정보가 풍부한 블로그 포스트를 작성해주세요. 최신 트렌드와 기술적 내용을 포함하고, 일반 독자도 이해할 수 있도록 설명해주세요. HTML 형식으로 작성하되, 제목은 <h1> 태그를 사용하고, 소제목은 <h2> 태그를 사용하세요. 이미지를 위한 자리 표시자도 포함해주세요.\"\n  },\n  {\n    \"role\": \"user\",\n    \"content\": \"다음 주제에 대한 블로그 포스트를 작성해주세요: {{$node[\\\"Generate Topic\\\"].json[\\\"topic\\\"]}}\"\n  }\n]"
            },
            {
              "name": "temperature",
              "value": 0.7
            },
            {
              "name": "max_tokens",
              "value": 2500
            }
          ]
        },
        "responseFormat": "json"
      },
      "name": "Generate Content",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [
        650,
        300
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "1",
          "name": "OpenAI API"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// OpenAI 응답에서 콘텐츠 추출\nconst responseData = $input.item.json.choices[0].message.content;\n\n// 제목 추출 (첫 번째 <h1> 태그 내용)\nconst titleMatch = responseData.match(/<h1>(.*?)<\\/h1>/i);\nconst title = titleMatch ? titleMatch[1] : \"AI 기술 블로그 포스트\";\n\n// 첫 번째 단락 추출하여 발췌문으로 사용\nconst excerptMatch = responseData.match(/<p>(.*?)<\\/p>/i);\nconst excerpt = excerptMatch ? excerptMatch[1] : \"AI 기술에 관한 블로그 포스트입니다.\";\n\n// 현재 날짜 생성\nconst now = new Date();\nconst formattedDate = now.toISOString();\n\nreturn {\n  title: title,\n  content: responseData,\n  excerpt: excerpt,\n  date: formattedDate,\n  status: \"publish\",\n  categories: [2], // AI 카테고리 ID (워드프레스에서 확인 필요)\n  tags: [3, 4], // 관련 태그 ID (워드프레스에서 확인 필요)\n  featured_media: 0 // 나중에 ComfyUI에서 생성한 이미지로 업데이트\n};"
      },
      "name": "Format for WordPress",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [
        850,
        300
      ]
    },
    {
      "parameters": {
        "url": "http://comfyui:8188/prompt",
        "options": {},
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "prompt",
              "value": "={\n  \"3\": {\n    \"inputs\": {\n      \"text\": \"{{$node[\\\"Generate Topic\\\"].json[\\\"topic\\\"]}}, digital art, high quality, detailed\",\n      \"clip\": [\n        \"4\",\n        1\n      ]\n    },\n    \"class_type\": \"CLIPTextEncode\"\n  },\n  \"4\": {\n    \"inputs\": {\n      \"stop_at_clip_layer\": -1,\n      \"clip\": [\n        \"7\",\n        0\n      ]\n    },\n    \"class_type\": \"CLIPSetLastLayer\"\n  },\n  \"7\": {\n    \"inputs\": {\n      \"ckpt_name\": \"dreamshaper_8.safetensors\"\n    },\n    \"class_type\": \"CheckpointLoaderSimple\"\n  },\n  \"8\": {\n    \"inputs\": {\n      \"seed\": 123456789,\n      \"steps\": 20,\n      \"cfg\": 8,\n      \"sampler_name\": \"euler\",\n      \"scheduler\": \"normal\",\n      \"denoise\": 1,\n      \"model\": [\n        \"7\",\n        0\n      ],\n      \"positive\": [\n        \"3\",\n        0\n      ],\n      \"negative\": [\n        \"5\",\n        0\n      ],\n      \"latent_image\": [\n        \"6\",\n        0\n      ]\n    },\n    \"class_type\": \"KSampler\"\n  },\n  \"5\": {\n    \"inputs\": {\n      \"text\": \"low quality, bad anatomy, blurry, pixelated\",\n      \"clip\": [\n        \"4\",\n        1\n      ]\n    },\n    \"class_type\": \"CLIPTextEncode\"\n  },\n  \"6\": {\n    \"inputs\": {\n      \"width\": 768,\n      \"height\": 512,\n      \"batch_size\": 1\n    },\n    \"class_type\": \"EmptyLatentImage\"\n  },\n  \"9\": {\n    \"inputs\": {\n      \"samples\": [\n        \"8\",\n        0\n      ],\n      \"vae\": [\n        \"7\",\n        2\n      ]\n    },\n    \"class_type\": \"VAEDecode\"\n  },\n  \"10\": {\n    \"inputs\": {\n      \"filename_prefix\": \"AI_Blog_Image\",\n      \"images\": [\n        \"9\",\n        0\n      ]\n    },\n    \"class_type\": \"SaveImage\"\n  }\n}"
            }
          ]
        },
        "options": {
          "response": {
            "response": {
              "fullResponse": true
            }
          }
        }
      },
      "name": "Generate Image with ComfyUI",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [
        850,
        500
      ]
    },
    {
      "parameters": {
        "jsCode": "// ComfyUI 응답에서 이미지 정보 추출\nconst comfyResponse = $input.item.json;\n\n// 이미지 파일 경로 추출 (실제 응답 구조에 따라 조정 필요)\nlet imagePath = '';\nif (comfyResponse && comfyResponse.output && comfyResponse.output.images && comfyResponse.output.images.length > 0) {\n  imagePath = comfyResponse.output.images[0].path;\n}\n\nreturn {\n  imagePath: imagePath\n};"
      },
      "name": "Extract Image Path",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [
        1050,
        500
      ]
    },
    {
      "parameters": {
        "url": "=http://wordpress/wp-json/wp/v2/media",
        "authentication": "genericCredentialType",
        "genericAuthType": "basicAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Disposition",
              "value": "attachment; filename=ai_blog_image.jpg"
            },
            {
              "name": "Content-Type",
              "value": "image/jpeg"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "binaryData",
        "binaryPropertyName": "data",
        "options": {}
      },
      "name": "Upload Image to WordPress",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [
        1250,
        500
      ],
      "credentials": {
        "basicAuth": {
          "id": "2",
          "name": "WordPress Credentials"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// 워드프레스 미디어 응답에서 ID 추출\nconst mediaResponse = $input.item.json;\nconst mediaId = mediaResponse.id;\n\n// 이전 노드에서 포스트 데이터 가져오기\nconst postData = $node[\"Format for WordPress\"].json;\n\n// 미디어 ID 추가\npostData.featured_media = mediaId;\n\nreturn postData;"
      },
      "name": "Update Post with Media",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [
        1450,
        400
      ]
    },
    {
      "parameters": {
        "url": "http://wordpress/wp-json/wp/v2/posts",
        "authentication": "genericCredentialType",
        "genericAuthType": "basicAuth",
        "method": "POST",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{$node[\"Update Post with Media\"].json}}",
        "options": {}
      },
      "name": "Create WordPress Post",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [
        1650,
        400
      ],
      "credentials": {
        "basicAuth": {
          "id": "2",
          "name": "WordPress Credentials"
        }
      }
    }
  ],
  "connections": {
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Generate Topic",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate Topic": {
      "main": [
        [
          {
            "node": "Generate Content",
            "type": "main",
            "index": 0
          },
          {
            "node": "Generate Image with ComfyUI",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate Content": {
      "main": [
        [
          {
            "node": "Format for WordPress",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate Image with ComfyUI": {
      "main": [
        [
          {
            "node": "Extract Image Path",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract Image Path": {
      "main": [
        [
          {
            "node": "Upload Image to WordPress",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Upload Image to WordPress": {
      "main": [
        [
          {
            "node": "Update Post with Media",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format for WordPress": {
      "main": [
        [
          {
            "node": "Update Post with Media",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Update Post with Media": {
      "main": [
        [
          {
            "node": "Create WordPress Post",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  }
} 